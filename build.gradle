// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

}

plugins {
    id 'com.android.application' version '8.0.2' apply false
    id 'com.android.library' version "${gradlePluginVersion}" apply false
    id 'org.jetbrains.kotlin.android' version "${kotlinVersion}" apply false
    id 'org.jetbrains.kotlin.jvm' version "${kotlinVersion}" apply false
    id "com.github.ben-manes.versions" version "${versionCheckerPlugin}" apply true // used tu check lib version
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

// https://github.com/ben-manes/gradle-versions-plugin
tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

def getLocalProperty(String propertyKey, Object defaultValue) {
    Properties properties = new Properties()
    if (project.rootProject.file('local.properties').canRead()) {
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
    }
    def value = properties.getProperty(propertyKey)
    if (value == null) {
        throw new MissingPropertyException("You should create a new field $propertyKey=\"value\" " +
                "into your local.properties file")
    }
    return properties.getProperty(propertyKey, defaultValue)
}